(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      6873,        159]
NotebookOptionsPosition[      6498,        147]
NotebookOutlinePosition[      6765,        160]
CellTagsIndexPosition[      6722,        157]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[StyleData[StyleDefinitions -> FrontEnd`FileName[{
  "DevTools", "ReverseColorPackage.nb"}]]],

Cell[StyleData["Notebook"],
 NotebookEventActions->{{"KeyDown", "\t"} :> 
   Block[{$ContextPath}, Needs["DevTools`"]; DevTools`IndentCode[]], {
    "MenuCommand", "InsertNewGraphic"} :> 
   Block[{$ContextPath}, Needs["DevTools`"]; 
     DevTools`OpenNotebookMenu["CodeTemplates"]], {
    "MenuCommand", "NewColumn"} :> 
   Block[{$ContextPath}, Needs["DevTools`"]; 
     DevTools`OpenNotebookMenu["NotebookActions"]], ParentList},
 DockedCells->{
   Cell[
    BoxData[
     TagBox[
      GridBox[{{
         PaneBox[
          ButtonBox["\"Get @ ThisFile\"", ButtonFunction :> (Get[
              ReplaceAll[
               NotebookFileName[], $Failed :> (Beep[]; Abort[])]]; 
            FrontEndExecute[
              FrontEnd`Private`GetUpdatedSymbolContexts[]]), Appearance -> 
           FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"], Method -> "Queued", 
           BaseStyle -> {FontColor -> GrayLevel[0.2]}, Evaluator -> 
           Automatic], ImageSize -> Full], 
         ActionMenuBox[
          ButtonBox[
           TemplateBox[{"  ", "\"  \"", "\"Templates & Actions\"", 
             PaneBox[
              StyleBox[
               DynamicBox[
                FEPrivate`ImportImage[
                 FrontEnd`FileName[{"Toolbars", "Package"}, "MenuIcon.png"]]],
                Magnification -> 0.5], 
              BaselinePosition -> (Bottom -> Baseline)]}, 
            "RowWithSeparators"], ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> 
           FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"], 
           BaseStyle -> {FontColor -> GrayLevel[0.2]}, Method -> 
           "Preemptive"], {
          "\"Edit code templates\"" :> 
           Block[{$ContextPath}, Needs["DevTools`"]; 
             DevTools`CodeTemplatesEdit[]], 
           TemplateBox[{"\"Open templates menu  \"", 
              FrameBox[
               StyleBox["\"Ctrl\"", 10, StripOnInput -> False], 
               ImageSize -> {All, 18}, FrameMargins -> {{2, 4}, {4, 2}}, 
               ImageSize -> {18, 18}, FrameStyle -> Directive[
                 Thickness[Large], 
                 GrayLevel[0.7]], ContentPadding -> False, RoundingRadius -> 
               2, Background -> GrayLevel[0.99], StripOnInput -> False], 
              "\"+\"", 
              FrameBox[
               StyleBox["\"1\"", 10, StripOnInput -> False], 
               FrameMargins -> {{2, 4}, {4, 2}}, ImageSize -> {18, 18}, 
               FrameStyle -> Directive[
                 Thickness[Large], 
                 GrayLevel[0.7]], ContentPadding -> False, RoundingRadius -> 
               2, Background -> GrayLevel[0.99], StripOnInput -> False]}, 
             "RowDefault"] :> 
           Block[{$ContextPath}, Needs["DevTools`"]; 
             DevTools`OpenNotebookMenu["CodeTemplates"]], Delimiter, 
           "\"Edit notebook actions\"" :> 
           Block[{$ContextPath}, Needs["DevTools`"]; 
             DevTools`EditNotebookActions[]], 
           TemplateBox[{"\"Open actions menu  \"", 
              FrameBox[
               StyleBox["\"Ctrl\"", 10, StripOnInput -> False], 
               ImageSize -> {All, 18}, FrameMargins -> {{2, 4}, {4, 2}}, 
               ImageSize -> {18, 18}, FrameStyle -> Directive[
                 Thickness[Large], 
                 GrayLevel[0.7]], ContentPadding -> False, RoundingRadius -> 
               2, Background -> GrayLevel[0.99], StripOnInput -> False], 
              "\"+\"", 
              FrameBox[
               StyleBox["\"p\"", 10, StripOnInput -> False], 
               FrameMargins -> {{2, 4}, {4, 2}}, ImageSize -> {18, 18}, 
               FrameStyle -> Directive[
                 Thickness[Large], 
                 GrayLevel[0.7]], ContentPadding -> False, RoundingRadius -> 
               2, Background -> GrayLevel[0.99], StripOnInput -> False]}, 
             "RowDefault"] :> 
           Block[{$ContextPath}, Needs["DevTools`"]; 
             DevTools`OpenNotebookMenu["NotebookActions"]], Delimiter, 
           "\"Refresh All\"" :> 
           Block[{$ContextPath}, 
             Needs["DevTools`"]; \
$CellContext`Private`ResetResource[$CellContext`Private`$paclet, 
               "NotebookActions"]; \
$CellContext`Private`ResetResource[$CellContext`Private`$paclet, 
               "CodeTemplates"]; Null]}, Method -> "Queued", Appearance -> 
          None], 
         TagBox[
          TooltipBox[
           ButtonBox[
            PaneBox[
             StyleBox[
              DynamicBox[
               FEPrivate`ImportImage[
                
                FrontEnd`FileName[{"Toolbars", "Package"}, 
                 "UpdateIcon.png"]]], Magnification -> 0.5], BaselinePosition -> 
             Scaled[0.15]], ButtonFunction :> (FrontEndExecute[
               FrontEnd`Private`GetUpdatedSymbolContexts[]]; 
             MathLink`CallFrontEnd[
               FrontEnd`ResetMenusPacket[{Automatic, Automatic}]]), 
            Appearance -> 
            FEPrivate`FrontEndResource[
             "MUnitExpressions", "ButtonAppearances"], 
            BaseStyle -> {FontColor -> GrayLevel[0.2]}, Method -> "Queued", 
            Evaluator -> Automatic], 
           "\"Refresh symbol highlighting and front end menus.\"", LabelStyle -> 
           "TextStyling"], 
          Annotation[#, "Refresh symbol highlighting and front end menus.", 
           "Tooltip"]& ]}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaseStyle -> (
        ButtonBoxOptions -> {
         FrameMargins -> {{10, 10}, {0, 0}}, ImageSize -> {Automatic, 28}, 
          FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"]})], 
      "Grid"]], "DockedCell", CellFrameMargins -> {{12, 12}, {10, 10}}], 
   Inherited}]
},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 97, 1, 70, 97, 1, "StyleData", "StyleDefinitions", "",ExpressionUUID->"65d57cdf-d696-4b84-8cff-8123b4ae9c87"],
Cell[658, 23, 5836, 122, 70, 27, 0, "StyleData", "Notebook", "All",ExpressionUUID->"25bedfab-71ec-49e6-873f-1f1d734aca7b"]
}
]
*)

(* End of internal cache information *)

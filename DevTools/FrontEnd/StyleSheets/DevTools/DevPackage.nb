(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      5185,        125]
NotebookOptionsPosition[      4811,        113]
NotebookOutlinePosition[      5078,        126]
CellTagsIndexPosition[      5035,        123]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[StyleData[StyleDefinitions -> "Package.nb"]],

Cell[StyleData["Notebook"],
 NotebookEventActions->{{"KeyDown", "\t"} :> 
   Block[{$ContextPath}, Needs["DevTools`"]; DevTools`IndentCode[]], {
    "MenuCommand", "InsertNewGraphic"} :> 
   Block[{$ContextPath}, Needs["DevTools`"]; 
     DevTools`CodeTemplatesMenuOpen[]], ParentList},
 DockedCells->{
   Cell[
    BoxData[
     TagBox[
      GridBox[{{
         PaneBox[
          ButtonBox["\"Get @ ThisFile\"", ButtonFunction :> (Get[
              NotebookFileName[]]; FrontEndExecute[
              FrontEnd`Private`GetUpdatedSymbolContexts[]]), Appearance -> 
           FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"], Method -> "Queued", 
           BaseStyle -> {FontColor -> GrayLevel[0.2]}, Evaluator -> 
           Automatic], ImageSize -> Full], 
         ActionMenuBox[
          ButtonBox[
           TemplateBox[{"  ", "\"  \"", "\"Code templates\"", 
             PaneBox[
              StyleBox[
               DynamicBox[
                FEPrivate`ImportImage[
                 FrontEnd`FileName[{"Toolbars", "Package"}, "MenuIcon.png"]]],
                Magnification -> 0.5], 
              BaselinePosition -> (Bottom -> Baseline)]}, 
            "RowWithSeparators"], ButtonFunction :> {}, Evaluator -> None, 
           Appearance -> 
           FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"], 
           BaseStyle -> {FontColor -> GrayLevel[0.2]}, Method -> 
           "Preemptive"], {
          "\"Edit user templates\"" :> 
           Block[{$ContextPath}, Needs["DevTools`"]; 
             DevTools`CodeTemplatesEdit[]], "\"Refresh\"" :> 
           Block[{$ContextPath}, Needs["DevTools`"]; 
             DevTools`CodeTemplatesReset[]], TemplateBox[{"\"Open menu  \"", 
              FrameBox[
               StyleBox["\"Ctrl\"", 10, StripOnInput -> False], 
               ImageSize -> {All, 18}, FrameMargins -> {{2, 4}, {4, 2}}, 
               ImageSize -> {18, 18}, FrameStyle -> Directive[
                 Thickness[Large], 
                 GrayLevel[0.7]], ContentPadding -> False, RoundingRadius -> 
               2, Background -> GrayLevel[0.99], StripOnInput -> False], 
              "\"+\"", 
              FrameBox[
               StyleBox["\"1\"", 10, StripOnInput -> False], 
               FrameMargins -> {{2, 4}, {4, 2}}, ImageSize -> {18, 18}, 
               FrameStyle -> Directive[
                 Thickness[Large], 
                 GrayLevel[0.7]], ContentPadding -> False, RoundingRadius -> 
               2, Background -> GrayLevel[0.99], StripOnInput -> False]}, 
             "RowDefault"] :> 
           Block[{$ContextPath}, Needs["DevTools`"]; 
             DevTools`CodeTemplatesMenuOpen[]]}, Method -> "Queued", 
          Appearance -> None], 
         TagBox[
          TooltipBox[
           ButtonBox[
            PaneBox[
             StyleBox[
              DynamicBox[
               FEPrivate`ImportImage[
                
                FrontEnd`FileName[{"Toolbars", "Package"}, 
                 "UpdateIcon.png"]]], Magnification -> 0.5], BaselinePosition -> 
             Scaled[0.15]], ButtonFunction :> (FrontEndExecute[
               FrontEnd`Private`GetUpdatedSymbolContexts[]]; 
             MathLink`CallFrontEnd[
               FrontEnd`ResetMenusPacket[{Automatic, Automatic}]]), 
            Appearance -> 
            FEPrivate`FrontEndResource[
             "MUnitExpressions", "ButtonAppearances"], 
            BaseStyle -> {FontColor -> GrayLevel[0.2]}, Method -> "Queued", 
            Evaluator -> Automatic], 
           "\"Refresh symbol highlighting and front end menus.\"", LabelStyle -> 
           "TextStyling"], 
          Annotation[#, "Refresh symbol highlighting and front end menus.", 
           "Tooltip"]& ]}}, AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaseStyle -> (
        ButtonBoxOptions -> {
         FrameMargins -> {{10, 10}, {0, 0}}, ImageSize -> {Automatic, 28}, 
          FontFamily -> FrontEnd`CurrentValue["ControlsFontFamily"]})], 
      "Grid"]], "DockedCell", CellFrameMargins -> {{12, 12}, {10, 10}}], 
   Inherited}]
},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 49, 0, 70, 49, 0, "StyleData", "StyleDefinitions", "",ExpressionUUID->"806fc2de-8357-4200-a31e-1b057eb245f6"],
Cell[610, 22, 4197, 89, 70, 27, 0, "StyleData", "Notebook", "All",ExpressionUUID->"ab52ebfe-1eb0-4470-8cfe-28b1396b0a4f"]
}
]
*)

(* End of internal cache information *)
